# Generated by Django 3.0.4 on 2020-05-17 11:29

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import transcripta.transcripts.models.usermodels


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=150, verbose_name='name der beteiligten Person')),
            ],
            options={
                'verbose_name': 'beteiligte Person',
                'verbose_name_plural': 'beteiligte Personen',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(help_text='Vollständiger Name der Institution', max_length=80, unique=True, verbose_name='institution')),
                ('street', models.CharField(help_text='Strasse', max_length=50, verbose_name='strasse')),
                ('zip_code', models.PositiveSmallIntegerField(help_text='PLZ', verbose_name='postleitzahl')),
                ('city', models.CharField(help_text='Ort', max_length=30, verbose_name='ort')),
                ('country', models.CharField(help_text='Land', max_length=50, verbose_name='land')),
                ('site_url', models.URLField(blank=True, help_text='URL der Website', verbose_name='website')),
                ('institution_utc_add', models.DateTimeField(auto_now_add=True)),
                ('institution_slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'institution',
                'verbose_name_plural': 'institutionen',
            },
        ),
        migrations.CreateModel(
            name='SourceLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(max_length=50, verbose_name='sprache')),
                ('language_code', models.CharField(max_length=3, verbose_name='ISO 639-3 Code')),
            ],
            options={
                'verbose_name': 'sprache',
                'verbose_name_plural': 'sprachen',
            },
        ),
        migrations.CreateModel(
            name='SourceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50, verbose_name='archivalienart')),
                ('parent_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_type', to='transcripts.SourceType', verbose_name='übergeordnete Archivalienart')),
            ],
            options={
                'verbose_name': 'archivalienart',
                'verbose_name_plural': 'archivalienarten',
            },
        ),
        migrations.CreateModel(
            name='RefNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refnumber_name', models.CharField(help_text='Signatur der Verzeichniseinheit', max_length=100, verbose_name='signatur')),
                ('refnumber_title', models.CharField(blank=True, help_text='Titel der Verzeichniseinheit', max_length=150, verbose_name='titel')),
                ('collection_link', models.URLField(blank=True, help_text='Link zum Archivbestand', verbose_name='link zum Archivbestand')),
                ('refnumber_utc_add', models.DateTimeField(auto_now_add=True)),
                ('refnumber_slug', models.SlugField(unique=True)),
                ('holding_institution', models.ForeignKey(help_text='Institution, welche die Signatur beherbergt', on_delete=django.db.models.deletion.PROTECT, related_name='refnumbers', to='transcripts.Institution', verbose_name='institution')),
            ],
            options={
                'verbose_name': 'signatur',
                'verbose_name_plural': 'signaturen',
            },
        ),
        migrations.CreateModel(
            name='DocumentTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_name', models.CharField(help_text='Titel des Dokuments', max_length=200, verbose_name='titel')),
                ('start_year', models.SmallIntegerField(blank=True, help_text='YYYY', null=True, verbose_name='startjahr')),
                ('start_month', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Januar'), (2, 'Februar'), (3, 'März'), (4, 'April'), (5, 'Mai'), (6, 'Juni'), (7, 'Juli'), (8, 'August'), (9, 'September'), (10, 'Okober'), (11, 'November'), (12, 'Dezember')], help_text='MM', null=True, verbose_name='startmonat')),
                ('start_day', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24'), (25, '25'), (26, '26'), (27, '27'), (28, '28'), (29, '29'), (30, '30'), (31, '31')], help_text='DD', null=True, verbose_name='starttag')),
                ('end_year', models.SmallIntegerField(blank=True, help_text='YYYY', null=True, verbose_name='endjahr')),
                ('end_month', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Januar'), (2, 'Februar'), (3, 'März'), (4, 'April'), (5, 'Mai'), (6, 'Juni'), (7, 'Juli'), (8, 'August'), (9, 'September'), (10, 'Okober'), (11, 'November'), (12, 'Dezember')], help_text='MM', null=True, verbose_name='endmonat')),
                ('end_day', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, '23'), (24, '24'), (25, '25'), (26, '26'), (27, '27'), (28, '28'), (29, '29'), (30, '30'), (31, '31')], help_text='DD', null=True, verbose_name='endtag')),
                ('place_name', models.CharField(blank=True, help_text='Entstehungsort der Quelle', max_length=150, verbose_name='entstehungsort')),
                ('material', models.CharField(blank=True, choices=[('PAPIER', 'Papier'), ('PERGAMENT', 'Pergament'), ('PAPYRUS', 'Papyrus')], help_text='Beschreibstoff', max_length=15, verbose_name='beschreibstoff')),
                ('measurements_length', models.DecimalField(blank=True, decimal_places=1, help_text='Länge in cm', max_digits=5, null=True, verbose_name='länge')),
                ('measurements_width', models.DecimalField(blank=True, decimal_places=1, help_text='Breite in cm', max_digits=5, null=True, verbose_name='breite')),
                ('pages', models.PositiveSmallIntegerField(blank=True, help_text='Umfang der Quelle', null=True, verbose_name='anzahl Seiten')),
                ('paging_system', models.CharField(blank=True, choices=[('PAGINIERUNG', 'Paginierung'), ('FOLIIERUNG', 'Foliierung')], help_text='Paginierungssystem', max_length=15, verbose_name='paginierungssystem')),
                ('illuminated', models.CharField(blank=True, choices=[('JA', 'Ja'), ('NEIN', 'Nein')], help_text='Ist die Quelle illuminiert?', max_length=4, verbose_name='illuminiert')),
                ('seal', models.CharField(blank=True, choices=[('JA', 'Ja'), ('NEIN', 'Nein')], help_text='Sind Siegel erhalten?', max_length=4, verbose_name='siegel')),
                ('transcription_scope', models.TextField(help_text='Liste der transkribierten Abschnitte/Seiten/Kapitel', verbose_name='transkribierte Teile des Dokuments')),
                ('comments', models.TextField(blank=True, help_text='Platz für editorische und inhaltliche Anmerkungen', verbose_name='editorische und inhaltliche Anmerkungen')),
                ('transcription_text', models.TextField(help_text='Transkription', verbose_name='transkription')),
                ('document_utc_add', models.DateTimeField(auto_now_add=True)),
                ('document_slug', models.SlugField(unique=True)),
                ('author', models.ManyToManyField(blank=True, help_text='Autor*innen, Kopist*innen, Editor*innen', to='transcripts.Author', verbose_name='beteiligte Personen')),
                ('language', models.ManyToManyField(blank=True, help_text='In der Quelle verwendete Sprachen', to='transcripts.SourceLanguage', verbose_name='sprachen')),
                ('parent_institution', models.ForeignKey(help_text='Institution, welche die Quelle aufbewahrt', on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='transcripts.Institution', verbose_name='institution')),
                ('parent_refnumber', models.ForeignKey(help_text='Signatur der Quelle', on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='transcripts.RefNumber', verbose_name='signatur')),
                ('source_type', models.ForeignKey(blank=True, help_text='Archivalienart/Quellengattung', null=True, on_delete=django.db.models.deletion.PROTECT, to='transcripts.SourceType', verbose_name='archivalienart')),
            ],
            options={
                'verbose_name': 'dokument',
                'verbose_name_plural': 'dokumente',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('email_confirmed', models.BooleanField(default=True, help_text='Hat der User die Emailadresse bestätigt?', verbose_name='email bestätigt')),
                ('is_staff', models.BooleanField(default=False, help_text='Kann sich der User in den Admin-Bereich inloggen?', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Ist der User aktiv? False setzen, statt löschen.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('anonymous_publication', models.BooleanField(default=False, verbose_name='anonyme Publikation')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', transcripta.transcripts.models.usermodels.UserManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='refnumber',
            constraint=models.UniqueConstraint(fields=('refnumber_name', 'holding_institution'), name='unique_refnumber'),
        ),
    ]
